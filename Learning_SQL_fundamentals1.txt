
JOINS:

Normally if we use the join it will end up in inner join

to use join in the sql we must use alias  to avoid common column confusion from the both table

If you have to include the other database to make join you have to mention that db with column

self join is like joining the table within the table for eg employee id with manager id who is also an employee

composite primary Key: contains primary more than one column as primary

implicit join in where clause if we forget the where condition the implicit join may end up in cross join 

Try to use one join for eg if you are using left try to maintain the right join in every table


Natural join not recommended
use same column of the both the table automatically

Cross join every record in the customer table will be combined with every record in the product table 
for eg colors of the garment with sizes of the garment of the garment db


Union Operator
When return the number of columns for the both the query must be equal otherwise it throws error


varchar / char
varchar only store the size of the values 
char irrespective of the size of the value the maximum of the size


while inserting the values in the table we can the use anyorder by mentioning the  respective column names and values  when we explcitly mention it in the argument

LAST_INSERT_ID() : retrieves the last incremented value of the table

COPY OF THE TABLE using subquery

SAFE_UPDATE : in mysql preferences in the safe update avoid the multiple update of multiple row of single table


update issue in the table
Self-Referencing Subquery: When you write an UPDATE statement that includes a subquery referencing the same table, MySQL cannot guarantee the correctness of the operation. For example, in your original query:

Difference between having and where clause
having clause is applied after aggregration
where clause before aggregration

When doing groupby for a column you must include the column which you have selected with the group by in the select statement


Complex queries

We can write subqueries in select statement  from clause and where clause

When to use sub query when to use join is based on the readability

ALL Keyword to compare the list of values returned from the subquery

IN keyword is equivalent to ANY keyword

CORRELATED Query is nothing but using the outer query values as filter  the sub query

EXIST query is much faster in selecting the rows than IN operator

Basically sub query can be used in  not only in where clause but also in select clause and from clause as well 


Number add
string : concat, trim
Date = now we can give the specific timeformat for calcualtion

IF Nullvalue will return the specific text if the value is null in the select statement

View:
SELECT Statement

it can also be used in the below things

INSERT , update and delete 
under circumstances if doesnt have this keywords

Distinct
Aggregrate Functions 
Group By / Having
Union

if the view doesnt have any of this keywords above its called updatable view

with check option
you can try to control the modifying of the view by restricting the updating and deleting option

views can be used to avoid the changes directly in the table and helps to create the abstraction of the table and to avoid the table


store procedures 
input and output variable declaration

Unlike the store procedure , the function can return only single value 
where procedure can return multiple rows and values

Triggers can also initiated for table level ones i.e it get triggerred only once for every row 


EVENTS:
A task that get executed according to the schedule


To maintain the consistency (ACID) principles 

Concurrency 
When two transaction running in the same time, the other transaction is upheld until the first transaction is completed

Most of the concurrency reads has been solved by repeatable reads

Concurrency Problems
1.Dirty Reads if we read uncommitted data
2. Non-Repeating Reads - if you read the same transaction but different result  
3.Phantom Reads - if we miss one or more rows in a query

Moreover we make the isolation level to avoid the concurrency problems the more we gonna experience the scalability and performance issue

Repeatable isolation is the default concurrency level in the most of the db which solves the concurrency problem to maintain the stability

updation of the transaction of the one client will affect of the other transaction results in phantom error example (update of the location of state in the customer table)

Serializable isolation only for phantom reads

will wait the update of the other transaction to complete to reflect the other 



Deadlocks
When two transaction updates n the reverse orders
For eg customer and order table get executed in the reverse order and the first transaction clashes with the second transaction then deadlock will likely to occur 

To minimize the deadlocks
short and small of the transaction to avoid the likelihood of the deadlock



Datatypes:

Char
Varchar - 65000
Mediumtext -16MB (short medium length books)
LongTEXt Max 4GB (textbooks and years of log books)

-----------------------------------------------------------------
Tinytext MAX : 255 bytes
TEXT : MAX : 64MB it better to use varchar
------------------------------------------------------------

English 1bytes
European language 2 bytes
ASIAN - 3 bytes (Chinese and Japasnese)
-------------------------------------------------------------

INTEGER

Unsigned - positive
Why do we have to consider the bytes in the mysql is because it helps to improve the performance when handling huge db
--------------------------------------------------------------------------------------------------------------------------


DECIMAL
DEC , NUM, FIXED all are same

use precision at the highest accuracy


--------------------------------------------------------------------------------------------------------------------------
 
FLOAT  4b
DOUBLE  8b


use approximation instead of the actual number 

--------------------------------------------------------------------------------------------------------------------------

BOOLEAN
Bool and Boolean Datatypes

--------------------------------------------------------------------------------------------------------------------------
ENUM

Enum are the kind of the sets and array of selected options in the table

The Main cons of the Enum is that we need to create the table from the beginning if there is any modification of the values mentioned in the table

Mosh suggestion : try to include the lookup in the schemas example is the payment_method table for generating the drop downs or the list of the options 
which can be used for the other table

--------------------------------------------------------------------------------------------------------------------------

Date and time types:

Date time: you can use the datetime for storing without any year caveat

timestamp: can store upto 2038 thats the 2038 problems

--------------------------------------------------------------------------------------------------------------------------


BLOBS:

images/videos/pdf

it is advisable to avoid storing the blobs in the relational db as it causes severe performance prblems
slower backup increase the db sizes  


--------------------------------------------------------------------------------------------------------------------------

JSON types

to access the property [--> ] symbol or ['$.]' 
JSON_SET to set the properties and update the older one
JSON_REMOVE to remove the properties
We can use the object properties to extract the key value pair

--------------------------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------------------------
